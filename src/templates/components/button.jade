//- @TODO rewrite in topdoc syntax
//- Options:
	label      : caption - will be translated
	icon       : Icon Class (from icons.less (.icon)) - will be passed to __buttonIconLabel Mixin
	classes    : several css classes like grey, loginBtn etc.
	selected   : Define Selected State
	dataTarget : data-target attribute for target handling
	dataLang   : data-lang attribute for language handling
	dataIndex  : data-index attribute for indexing
	dataHelp   : data-help attribute to handle help Button event
	dataEvent  : data-event attribute to handle trigger event
	loader     : true, to enable loading animation

//- mixin button(options) OLD MIXIN - ONLY FOR REFERENCE - DO NOT UNCOMMENT
//- 	- options = options || {};
//- 	- options['label'] = options.label || '';
//- 	- var classesAll = ''
//- 	- if (typeof(options.classes) != 'undefined')
//- 		- classesAll += options.classes + ' '
//- 	- if (options.selected)
//- 		- classesAll += ' selected'
//- 	-if (options.isDisabled)
//- 		- classesAll += ' disabled'
//- 	-if (options.icon && (classesAll.indexOf('withIcon') < 0))
//- 		- classesAll += ' withIcon'
//- 	- if (typeof(options.classes) == 'delete')
//- 		- classesAll += 'grey'

//- 	.ion-btn(class=classesAll, id=options.id, data-type=options.type, data-target=options.dataTarget, data-event=options.dataEvent ,data-help=options.dataHelp, data-lang=options.dataLang, data-index=options.dataIndex, title=options.title, data-state=options.dataState, data-ID=options.dataID)
//- 		if (options.label || options.icon)
//- 			+__buttonIconLabel(options.icon, options.label, options.translate)
//- 			block
//- 		else
//- 			block
//- 		if options.loader
//- 			+buttonLoader

mixin button(options)
	//- Set default values
	- options['classes']     = options.classes     || '';
	- options['id']          = options.id          || '';
	- options['title']       = options.title       || '';
	- options['data']        = options.data        || '';
	- options['disabled']    = options.disabled    || false;
	- options.data['type']   = options.data.type   || '';
	- options.data['target'] = options.data.target || '';
	- options.data['event']  = options.data.event  || '';
	- options.data['help']   = options.data.help   || '';
	- options.data['lang']   = options.data.lang   || '';
	- options.data['index']  = options.data.index  || '';
	- options.data['state']  = options.data.state  || '';
	- options.data['id']     = options.data.id     || '';

	- if (options.disabled) options.classes =+ ' disabled ';

	//- Markup
	.ion-btn(class=options.classes, id=options.id, data-type=options.data.type, data-target= options.data.target, data-event=options.data.event, data-help=options.data.help, data-lang=options.data.lang, data-index=options.data.index, data-state=options.data.state, data-id=options.data.id)
		block

mixin buttonLoader
	span.loader

mixin __buttonIconLabel(icon, label, trans)
	- var labelText = (trans === false ? label : 'translate:' + label)
	span(class="#{icon ? 'icon '+icon : ''}") #{labelText}
	block

//- buttons for btn-group on commissioning header
	state : state  (start counting with 0)
	index : button number
mixin arrow_button_group(state, index, selectedIdx)
	+button({classes: 'btn-arrow', selected: (index == selectedIdx ? 'selected' : ''), translate: true, dataState: state})
		div
			- index++;		//- start counting with 1 not with 0
			- state = state.charAt(0).toUpperCase() + state.slice(1);
			.btn-state-index #{index}
			.btn-state-label #{state}

mixin btn_group(options)
	- options['data'] 		  = options.data || []
	- options['selectedData'] = options.selectedData || []
	- options['buttons']	  = options.buttons || []
	- options['classes']	  = options.classes || ''
	- if(options.buttons.length > 0 && options.classes.indexOf('justified') < 0) options.classes = options.classes + ' btn-group-justified'

	//- .btnGroup
	//- 	if (options.label)
	//- 		span.btnGroupDesc translate:#{options.label}:
	//- 	div(class='btn-group btn-group-#{options.size} #{options.classes}')
	//- 		if (options.data.length > 0)
	//- 			each element, key in options.data
	//- 				- var elementClass = 'btn btn-default btn-no-bg'+((options.selectedData.indexOf(element) < 0) ? '' : ' selected')
	//- 				+button({label: element, classes: elementClass, type: key, dataID: element})

	//- 		if (options.buttons.length > 0)
	//- 			each button in options.buttons
	//- 				+button(button)

	.btnGroup
		div(class='btn-group btn-group-#{options.size} #{options.classes}')
			block
