//- @TODO rewrite in topdoc syntax
//- Options:
    label      : caption - will be translated
    icon       : Icon Class (from icons.less (.icon)) - will be passed to __buttonIconLabel Mixin
    classes    : several css classes like grey, loginBtn etc.
    selected   : Define Selected State
    dataTarget : data-target attribute for target handling
    dataLang   : data-lang attribute for language handling
    dataIndex  : data-index attribute for indexing
    dataHelp   : data-help attribute to handle help Button event
    dataEvent  : data-event attribute to handle trigger event
    loader     : true, to enable loading animation

mixin button(options)
    //- Set default values
    - options                = options             || {};
    - options['classes']     = options.classes     || '';
    - options['priority']    = options.priority    || 'default';
    - options['id']          = options.id          || '';
    - options['size']        = options.size        || 'md';
    - if (options.disabled) options.classes =+ ' disabled ';

    //- Markup
    .emil-btn(class='emil-btn-#{options.size} #{options.classes} #{options.priority}', id=options.id)
        block

mixin button-loader
    span.button-loader

mixin button-group(options)
    //- @FIXME data redefine options structure
    - options['data']         = options.data || []
    - options['selectedData'] = options.selectedData || []
    - options['buttons']      = options.buttons || []
    - options['classes']      = options.classes || ''
    - if(options.buttons.length > 0 && options.classes.indexOf('justified') < 0) options.classes = options.classes + ' btn-group-justified'
    div(class='btn-group btn-group-#{options.size} #{options.classes}')
        block
